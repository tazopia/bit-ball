<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spoon.mapper.AgencyMapper">

    <select id="daily" resultType="spoon.accounting.domain.AccountingDto$Daily">
        SELECT a.dt,
        (SELECT COUNT(*) FROM MEMBER WHERE joinDate BETWEEN a.dt + ' 00:00:00.000' AND a.dt + ' 23:59:59.999' AND role = 'USER' AND enabled = 1 <include refid="whereAgency"/>) as member,
        IsNULL((SELECT SUM(amount) FROM BANKING WHERE closingDate BETWEEN a.dt + ' 00:00:00.000' AND a.dt + ' 23:59:59.999' AND bankingCode = 'IN' AND closing = 1 AND cancel = 0 <include refid="whereAgency"/>), 0) as inMoney,
        IsNULL((SELECT SUM(amount + fees) FROM BANKING WHERE regDate BETWEEN a.dt + ' 00:00:00.000' AND a.dt + ' 23:59:59.999' AND bankingCode = 'OUT' AND closing = 1 AND cancel = 0 <include refid="whereAgency"/>), 0) as outMoney,
        IsNull(betUser, 0) as betUser,
        (SELECT COUNT(DISTINCT userid) FROM BET WHERE betDate BETWEEN a.dt + ' 00:00:00.000' AND a.dt + ' 23:59:59.999' AND role != 'DUMMY' AND closing = 1 AND cancel = 0 AND menuCode IN ('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE') <include refid="whereAgency"/>) as sportsUser,
        IsNull(sportsBet, 0) as sportsBet, IsNull(sportsHit, 0) as sportsHit,
        (SELECT COUNT(DISTINCT userid) FROM BET WHERE betDate BETWEEN a.dt + ' 00:00:00.000' AND a.dt + ' 23:59:59.999' AND role != 'DUMMY' AND closing = 1 AND cancel = 0 AND menuCode NOT IN ('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE') <include refid="whereAgency"/>) as zoneUser,
        IsNull(zoneBet, 0) as zoneBet, IsNull(zoneHit, 0) as zoneHit,
        (SELECT COUNT(DISTINCT userid) FROM LOGIN_HISTORY WHERE loginDay = a.dt AND role = 'USER' <include refid="whereAgency"/>) as loginCnt
        FROM
        (SELECT dt FROM d_Date WHERE dt BETWEEN #{command.start} AND #{command.end}) a
        LEFT OUTER JOIN
        (
        SELECT
        date, COUNT(DISTINCT userid) as betUser,
        SUM(CASE WHEN menuCode IN ('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE') THEN betMoney ELSE 0 END) as sportsBet,
        SUM(CASE WHEN menuCode IN ('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE') THEN hitMoney ELSE 0 END) as sportsHit,
        SUM(CASE WHEN menuCode IN ('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE') THEN 0 ELSE betMoney END) as zoneBet,
        SUM(CASE WHEN menuCode IN ('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE') THEN 0 ELSE hitMoney END) as zoneHit
        FROM
        (
        SELECT
        userid, betMoney, hitMoney, menuCode, CONVERT(VARCHAR(10), betDate, 23) as date
        FROM BET
        WHERE betDate BETWEEN #{command.start} + ' 00:00:00.000' AND #{command.end} + ' 23:59:59.999' AND closing = 1 AND cancel = 0 AND role != 'DUMMY'
        <include refid="whereAgency"/>
        ) x
        GROUP BY date
        ) b
        ON a.dt = b.date
        ORDER BY a.dt
    </select>

    <select id="gameAccount" resultType="spoon.accounting.domain.AccountingDto$Game">
        SELECT
        #{command.menuCode} as menuCode,
        IsNull((SELECT SUM(betMoney) FROM BET WHERE betDate <include refid="whereDate"/> <include refid="whereMenuCode"/> AND closing = 1 AND cancel = 0 AND role != 'DUMMY' <include refid="whereAgency"/>), 0) as betMoney,
        IsNull((SELECT SUM(hitMoney) FROM BET WHERE betDate <include refid="whereDate"/> <include refid="whereMenuCode"/> AND closing = 1 AND cancel = 0 AND role != 'DUMMY' <include refid="whereAgency"/>), 0) as winMoney,
        IsNull((SELECT SUM(betMoney) FROM BET WHERE betDate <include refid="whereDate"/> <include refid="whereMenuCode"/> AND closing = 1 AND cancel = 0 AND hitMoney = 0 AND role != 'DUMMY' <include refid="whereAgency"/>), 0) as loseMoney,
        IsNull((SELECT SUM(betMoney) FROM BET WHERE betDate <include refid="whereDate"/> <include refid="whereMenuCode"/> AND closing = 0 AND cancel = 0 AND role != 'DUMMY' <include refid="whereAgency"/>), 0) as ingMoney
    </select>

    <select id="gameInplay" resultType="spoon.accounting.domain.AccountingDto$Game">
        SELECT
        'inplay' as menuCode,
        ISNULL((SELECT SUM(betMoney) FROM INPLAY_BET WHERE betDate <include refid="whereDate"/> AND closing = 1 AND cancel = 0 AND role != 'DUMMY' <include refid="whereAgency"/>), 0) as betMoney,
        IsNull((SELECT SUM(hitMoney) FROM INPLAY_BET WHERE betDate <include refid="whereDate"/> AND closing = 1 AND cancel = 0 AND role != 'DUMMY' <include refid="whereAgency"/>), 0) as winMoney,
        IsNull((SELECT SUM(betMoney) FROM INPLAY_BET WHERE betDate <include refid="whereDate"/> AND closing = 1 AND cancel = 0 AND hitMoney = 0 AND role != 'DUMMY' <include refid="whereAgency"/>), 0) as loseMoney,
        IsNull((SELECT SUM(betMoney) FROM INPLAY_BET WHERE betDate <include refid="whereDate"/> AND closing = 0 AND cancel = 0 AND role != 'DUMMY' <include refid="whereAgency"/>), 0) as ingMoney
    </select>


    <select id="money" resultType="spoon.accounting.domain.AccountingDto$Amount">
        SELECT moneyCode as code, SUM(amount) as amount FROM MONEY WHERE regDate <include refid="whereDate"/> <include refid="whereAgency"/> GROUP BY moneyCode
    </select>

    <select id="point" resultType="spoon.accounting.domain.AccountingDto$Amount">
        SELECT pointCode as code, SUM(amount) as amount FROM POINT WHERE regDate <include refid="whereDate"/> <include refid="whereAgency"/> GROUP BY pointCode
    </select>

    <select id="amount" resultType="spoon.monitor.domain.MonitorDto$Amount">
        SELECT IsNull(SUM(money), 0) as money, IsNull(SUM(point), 0) as point
        FROM member
        WHERE role != 'DUMMY' AND enabled = 1 AND secession = 0 <include refid="whereAgency"/>
    </select>

    <select id="sellerShare" resultType="spoon.seller.domain.Seller">
        SELECT userid, nickname, role, agency2, agency1, agency3, agency4, rateCode, rateShare, rateSports, rateZone,
        powerMax, powerMin, powerLadder, keno, kenoLadder, btc3Min, btc3Max, btc5Min, btc5Max, casino,
        (CASE
        when role = 'AGENCY1' Then
        (SELECT isNull(SUM(amount), 0) FROM BANKING WHERE agency1 = member.userid AND bankingCode = 'IN' AND closing = 1 AND cancel = 0)
        when role = 'AGENCY2' then
        (SELECT isNull(SUM(amount), 0) FROM BANKING WHERE agency2 = member.userid AND bankingCode = 'IN' AND closing = 1 AND cancel = 0)
        when role = 'AGENCY3' then
        (SELECT isNull(SUM(amount), 0) FROM BANKING WHERE agency3 = member.userid AND bankingCode = 'IN' AND closing = 1 AND cancel = 0)
        when role = 'AGENCY4' then
        (SELECT isNull(SUM(amount), 0) FROM BANKING WHERE agency4 = member.userid AND bankingCode = 'IN' AND closing = 1 AND cancel = 0)
        End)
        as inMoney,
        (CASE
        when role = 'AGENCY1' Then
        (SELECT isNull(SUM(amount), 0) FROM BANKING WHERE agency1 = member.userid AND bankingCode = 'OUT' AND closing = 1 AND cancel = 0)
        when role = 'AGENCY2' then
        (SELECT isNull(SUM(amount), 0) FROM BANKING WHERE agency2 = member.userid AND bankingCode = 'OUT' AND closing = 1 AND cancel = 0)
        when role = 'AGENCY3' then
        (SELECT isNull(SUM(amount), 0) FROM BANKING WHERE agency3 = member.userid AND bankingCode = 'OUT' AND closing = 1 AND cancel = 0)
        when role = 'AGENCY4' then
        (SELECT isNull(SUM(amount), 0) FROM BANKING WHERE agency4 = member.userid AND bankingCode = 'OUT' AND closing = 1 AND cancel = 0)
        End)
        as outMoney,
        (CASE
        when role = 'AGENCY1' Then
        (SELECT count(*) FROM MEMBER m WHERE m.agency1 = member.userid AND m.role = 'USER')
        when role = 'AGENCY2' then
        (SELECT count(*) FROM MEMBER m WHERE m.agency2 = member.userid AND m.role = 'USER')
        when role = 'AGENCY3' then
        (SELECT count(*) FROM MEMBER m WHERE m.agency3 = member.userid AND m.role = 'USER')
        when role = 'AGENCY4' then
        (SELECT count(*) FROM MEMBER m WHERE m.agency4 = member.userid AND m.role = 'USER')
        End)
        as regMember,
        (CASE when role = 'AGENCY1' Then
        (SELECT count(*) FROM MEMBER m WHERE m.agency1 = member.userid AND m.role = 'USER' AND m.enabled = 1 AND m.secession = 0)
        when role = 'AGENCY2' then
        (SELECT count(*) FROM MEMBER m WHERE m.agency2 = member.userid AND m.role = 'USER' AND m.enabled = 1 AND m.secession = 0)
        End)
        as joinMember,
        (CASE
        when role = 'AGENCY1' Then
        (SELECT isNull(SUM(b.betMoney), 0) FROM BET b WHERE b.agency1 = member.userid AND b.role != 'DUMMY' AND b.menuCode IN('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE', 'SPORTS') AND b.closing = 1 AND b.cancel = 0)
        when role = 'AGENCY2' then
        (SELECT isNull(SUM(b.betMoney), 0) FROM BET b WHERE b.agency2 = member.userid AND b.role != 'DUMMY' AND b.menuCode IN('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE', 'SPORTS') AND b.closing = 1 AND b.cancel = 0)
        when role = 'AGENCY3' then
        (SELECT isNull(SUM(b.betMoney), 0) FROM BET b WHERE b.agency3 = member.userid AND b.role != 'DUMMY' AND b.menuCode IN('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE', 'SPORTS') AND b.closing = 1 AND b.cancel = 0)
        when role = 'AGENCY4' then
        (SELECT isNull(SUM(b.betMoney), 0) FROM BET b WHERE b.agency4 = member.userid AND b.role != 'DUMMY' AND b.menuCode IN('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE', 'SPORTS') AND b.closing = 1 AND b.cancel = 0)
        End)
        as betSports,
        (CASE
        when role = 'AGENCY1' Then
        (SELECT isNull(SUM(b.betMoney), 0) FROM BET b WHERE b.agency1 = member.userid AND b.role != 'DUMMY' AND b.menuCode NOT IN('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE', 'SPORTS') AND b.closing = 1 AND b.cancel = 0)
        when role = 'AGENCY2' then
        (SELECT isNull(SUM(b.betMoney), 0) FROM BET b WHERE b.agency2 = member.userid AND b.role != 'DUMMY' AND b.menuCode NOT IN('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE', 'SPORTS') AND b.closing = 1 AND b.cancel = 0)
        when role = 'AGENCY3' then
        (SELECT isNull(SUM(b.betMoney), 0) FROM BET b WHERE b.agency3 = member.userid AND b.role != 'DUMMY' AND b.menuCode NOT IN('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE', 'SPORTS') AND b.closing = 1 AND b.cancel = 0)
        when role = 'AGENCY4' then
        (SELECT isNull(SUM(b.betMoney), 0) FROM BET b WHERE b.agency4 = member.userid AND b.role != 'DUMMY' AND b.menuCode NOT IN('MATCH', 'HANDICAP', 'CROSS', 'SPECIAL', 'LIVE', 'SPORTS') AND b.closing = 1 AND b.cancel = 0)
        End)
        as betZone
        FROM MEMBER WHERE
        <if test="command.role == 'AGENCY4'">
            role IN ('AGENCY1', 'AGENCY2', 'AGENCY3', 'AGENCY4')
            AND agency4 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY3'">
            role IN ('AGENCY1', 'AGENCY2', 'AGENCY3')
            AND agency3 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY2'">
            role IN ('AGENCY1', 'AGENCY2')
            AND agency2 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY1'">
            role IN ('AGENCY1')
            AND agency1 = #{command.agency}
        </if>

        ORDER BY agency4, agency3, agency2, agency1
    </select>

    <select id="currentSale" resultType="spoon.sale.entity.SaleItem">
        SELECT
        (CASE
        WHEN c.role = 'AGENCY1' THEN
        (SELECT count(*) FROM MEMBER WHERE agency1 = c.agency1 AND role = 'USER' AND enabled = 1 AND secession = 0)
        WHEN c.role = 'AGENCY2' THEN
        (SELECT count(*) FROM MEMBER WHERE agency2 = c.agency2 AND role = 'USER' AND enabled = 1 AND secession = 0)
        WHEN c.role = 'AGENCY3' THEN
        (SELECT count(*) FROM MEMBER WHERE agency3 = c.agency3 AND role = 'USER' AND enabled = 1 AND secession = 0)
        WHEN c.role = 'AGENCY4' THEN
        (SELECT count(*) FROM MEMBER WHERE agency4 = c.agency4 AND role = 'USER' AND enabled = 1 AND secession = 0)
        END) as users,
        (CASE
        WHEN c.role = 'AGENCY1' THEN
        (SELECT ISNULL(SUM(amount), 0) FROM BANKING WHERE regDate &gt; c.regDate AND agency1 = c.agency1 AND bankingCode = 'IN' AND role != 'DUMMY' AND closing = 1 AND cancel = 0)
        WHEN c.role = 'AGENCY2' THEN
        (SELECT ISNULL(SUM(amount), 0) FROM BANKING WHERE regDate &gt; c.regDate AND agency2 = c.agency2 AND bankingCode = 'IN' AND role != 'DUMMY' AND closing = 1 AND cancel = 0)
        WHEN c.role = 'AGENCY3' THEN
        (SELECT ISNULL(SUM(amount), 0) FROM BANKING WHERE regDate &gt; c.regDate AND agency3 = c.agency3 AND bankingCode = 'IN' AND role != 'DUMMY' AND closing = 1 AND cancel = 0)
        WHEN c.role = 'AGENCY4' THEN
        (SELECT ISNULL(SUM(amount), 0) FROM BANKING WHERE regDate &gt; c.regDate AND agency4 = c.agency4 AND bankingCode = 'IN' AND role != 'DUMMY' AND closing = 1 AND cancel = 0)
        END) as inMoney,
        (CASE WHEN c.role = 'AGENCY1' THEN
        (SELECT ISNULL(SUM(amount), 0) FROM BANKING WHERE regDate &gt; c.regDate AND agency1 = c.agency1 AND bankingCode = 'OUT' AND role != 'DUMMY' AND closing = 1 AND cancel = 0)
        WHEN c.role = 'AGENCY2' THEN
        (SELECT ISNULL(SUM(amount), 0) FROM BANKING WHERE regDate &gt; c.regDate AND agency2 = c.agency2 AND bankingCode = 'OUT' AND role != 'DUMMY' AND closing = 1 AND cancel = 0)
        WHEN c.role = 'AGENCY3' THEN
        (SELECT ISNULL(SUM(amount), 0) FROM BANKING WHERE regDate &gt; c.regDate AND agency3 = c.agency3 AND bankingCode = 'OUT' AND role != 'DUMMY' AND closing = 1 AND cancel = 0)
        WHEN c.role = 'AGENCY4' THEN
        (SELECT ISNULL(SUM(amount), 0) FROM BANKING WHERE regDate &gt; c.regDate AND agency4 = c.agency4 AND bankingCode = 'OUT' AND role != 'DUMMY' AND closing = 1 AND cancel = 0)
        END) as outMoney,
        (CASE WHEN c.role = 'AGENCY1' THEN
        (SELECT ISNULL(SUM(betMoney), 0) FROM BET WHERE startDate &gt; c.regDate AND startDate &lt;= getDate() AND agency1 = c.agency1 AND menuCode IN ('CROSS', 'MATCH', 'HANDICAP', 'SPECIAL', 'LIVE') AND role != 'DUMMY' AND cancel = 0)
        WHEN c.role = 'AGENCY2' THEN
        (SELECT ISNULL(SUM(betMoney), 0) FROM BET WHERE startDate &gt; c.regDate AND startDate &lt;= getDate() AND agency2 = c.agency2 AND menuCode IN ('CROSS', 'MATCH', 'HANDICAP', 'SPECIAL', 'LIVE') AND role != 'DUMMY' AND cancel = 0)
        WHEN c.role = 'AGENCY3' THEN
        (SELECT ISNULL(SUM(betMoney), 0) FROM BET WHERE startDate &gt; c.regDate AND startDate &lt;= getDate() AND agency3 = c.agency3 AND menuCode IN ('CROSS', 'MATCH', 'HANDICAP', 'SPECIAL', 'LIVE') AND role != 'DUMMY' AND cancel = 0)
        WHEN c.role = 'AGENCY4' THEN
        (SELECT ISNULL(SUM(betMoney), 0) FROM BET WHERE startDate &gt; c.regDate AND startDate &lt;= getDate() AND agency4 = c.agency4 AND menuCode IN ('CROSS', 'MATCH', 'HANDICAP', 'SPECIAL', 'LIVE') AND role != 'DUMMY' AND cancel = 0)
        END) as betSports,
        (CASE WHEN c.role = 'AGENCY1' THEN
        (SELECT ISNULL(SUM(betMoney), 0) FROM BET WHERE startDate &gt; c.regDate AND startDate &lt;= getDate() AND agency1 = c.agency1 AND menuCode NOT IN ('CROSS', 'MATCH', 'HANDICAP', 'SPECIAL', 'LIVE') AND role != 'DUMMY' AND cancel = 0)
        WHEN c.role = 'AGENCY2' THEN
        (SELECT ISNULL(SUM(betMoney), 0) FROM BET WHERE startDate &gt; c.regDate AND startDate &lt;= getDate() AND agency2 = c.agency2 AND menuCode NOT IN ('CROSS', 'MATCH', 'HANDICAP', 'SPECIAL', 'LIVE') AND role != 'DUMMY' AND cancel = 0)
        WHEN c.role = 'AGENCY3' THEN
        (SELECT ISNULL(SUM(betMoney), 0) FROM BET WHERE startDate &gt; c.regDate AND startDate &lt;= getDate() AND agency3 = c.agency3 AND menuCode NOT IN ('CROSS', 'MATCH', 'HANDICAP', 'SPECIAL', 'LIVE') AND role != 'DUMMY' AND cancel = 0)
        WHEN c.role = 'AGENCY4' THEN
        (SELECT ISNULL(SUM(betMoney), 0) FROM BET WHERE startDate &gt; c.regDate AND startDate &lt;= getDate() AND agency4 = c.agency4 AND menuCode NOT IN ('CROSS', 'MATCH', 'HANDICAP', 'SPECIAL', 'LIVE') AND role != 'DUMMY' AND cancel = 0)
        END) as betZone,
        c.userid, c.agency4, c.agency3, c.agency2, c.agency1, c.role, c.rateCode, c.rateShare, c.rateSports, c.rateZone, c.regDate,
        c.lastMoney, c.totalMoney
        FROM
        (
        SELECT
        a.userid, a.agency4, a.agency3, a.agency2, a.agency1, a.role, a.rateCode, a.rateShare, a.rateSports, a.rateZone,
        ISNULL(b.regDate, a.joinDate) as regDate, b.lastMoney, b.totalMoney
        FROM MEMBER a LEFT OUTER JOIN SALE_ITEM b
        ON a.userid = b.userid AND b.id = (SELECT MAX(id) FROM SALE_ITEM WHERE userid = a.userid)
        WHERE a.enabled = 1 AND a.secession = 0
        <if test="command.role == 'AGENCY4'">
            AND a.role IN ('AGENCY1', 'AGENCY2', 'AGENCY3', 'AGENCY4')
            AND a.agency4 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY3'">
            AND a.role IN ('AGENCY1', 'AGENCY2', 'AGENCY3')
            AND a.agency3 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY2'">
            AND a.role IN ('AGENCY1', 'AGENCY2')
            AND a.agency2 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY1'">
            AND a.role IN ('AGENCY1')
            AND a.agency1 = #{command.agency}
        </if>
        ) c
        ORDER BY c.agency4, c.agency3, c.agency2, c.agency1
    </select>

    <sql id="whereDate">
		BETWEEN #{command.start} + ' 00:00:00.000' AND #{command.end} + ' 23:59:59.999'
	</sql>

    <sql id="whereMenuCode">
        <if test="command.menuCode == 'SPORTS'">
            AND menuCode IN ('MATCH', 'CROSS', 'HANDICAP', 'SPECIAL', 'LIVE')
        </if>
        <if test="command.menuCode != 'SPORTS'">
            AND menuCode = #{command.menuCode}
        </if>
    </sql>

    <sql id="whereAgency">
        <if test="command.role == 'AGENCY4'">
            AND agency4 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY3'">
            AND agency3 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY2'">
            AND agency2 = #{command.agency}
        </if>
        <if test="command.role == 'AGENCY1'">
            AND agency1 = #{command.agency}
        </if>
    </sql>

</mapper>